/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package taller;

import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import CEN.*;
import com.google.gson.reflect.TypeToken;
import com.google.gson.*;

/**
 *
 * @author alberto
 */
public class Home extends javax.swing.JFrame {

    private ArrayList<RequestCEN> requests;
    private ArrayList<OfferCEN> offers;
    String user;
    /**
     * Creates new form Home
     */
    public Home(String name) {
        initComponents();
        user=name;
        
        lbTitle.setText("Bienvenido "+user);
        
        requests=new ArrayList<RequestCEN>();
        offers=new ArrayList<OfferCEN>();   
        
        checkRequests();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPane = new javax.swing.JPanel();
        lbTitle = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        offerList = new javax.swing.JList();
        btAccept = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        requestFList = new javax.swing.JList();
        lbAccepted = new javax.swing.JLabel();
        btDecline = new javax.swing.JButton();
        btNewRequest = new javax.swing.JButton();
        btFavourite = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPane.setBackground(new java.awt.Color(245, 228, 179));

        lbTitle.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lbTitle.setText("Bienvenido");

        jLabel2.setText("Solicitudes pendientes");

        jLabel3.setText("Ofertas recibidas");

        requestList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        requestList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requestListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(requestList);

        jScrollPane2.setViewportView(offerList);

        btAccept.setText("Aceptar seleccionadas");
        btAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAcceptActionPerformed(evt);
            }
        });

        jLabel1.setText("Solicitudes finalizadas");

        requestFList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        requestFList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requestFListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(requestFList);

        lbAccepted.setText("Aceptadas: ");

        btDecline.setText("Declinar solicitud");
        btDecline.setEnabled(false);
        btDecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeclineActionPerformed(evt);
            }
        });

        btNewRequest.setText("Nueva solicitud");
        btNewRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNewRequestActionPerformed(evt);
            }
        });

        btFavourite.setText("Ver favoritas");
        btFavourite.setEnabled(false);
        btFavourite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFavouriteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPaneLayout = new javax.swing.GroupLayout(mainPane);
        mainPane.setLayout(mainPaneLayout);
        mainPaneLayout.setHorizontalGroup(
            mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPaneLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPaneLayout.createSequentialGroup()
                        .addComponent(btNewRequest)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(mainPaneLayout.createSequentialGroup()
                        .addComponent(lbTitle)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(mainPaneLayout.createSequentialGroup()
                        .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addComponent(btDecline, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbAccepted))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(mainPaneLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btFavourite))
                            .addComponent(btAccept)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(91, 91, 91))))
        );
        mainPaneLayout.setVerticalGroup(
            mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPaneLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lbTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(btNewRequest)
                .addGap(6, 6, 6)
                .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(btFavourite))
                .addGap(18, 18, 18)
                .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPaneLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDecline)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btAccept)
                            .addComponent(lbAccepted)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void requestFListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestFListMouseClicked
        // TODO add your handling code here:

        requestList.clearSelection();
        btDecline.setEnabled(false);
        checkOffers(requestFList,false);
    }//GEN-LAST:event_requestFListMouseClicked

    private void btAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAcceptActionPerformed
        // TODO add your handling code here:
        String text="";
        OfferCEN offer;
        
        for(int index: offerList.getSelectedIndices()) {
            offer=offers.get(index);
            text+=offer.getCode()+" ";            
        }
        lbAccepted.setText(text);
    }//GEN-LAST:event_btAcceptActionPerformed

    private void requestListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestListMouseClicked
        // TODO add your handling code here:
        requestFList.clearSelection();        
        btDecline.setEnabled(true);
        checkOffers(requestList,false);
    }//GEN-LAST:event_requestListMouseClicked

    private void btDeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeclineActionPerformed
        // TODO add your handling code here:
        int index=requestList.getSelectedIndex();
        
        if(index>-1) {            
            borrar(((RequestCEN)requestList.getSelectedValue()).getCode());
            checkRequests();
        }
    }//GEN-LAST:event_btDeclineActionPerformed

    private void btNewRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNewRequestActionPerformed
        // TODO add your handling code here:
        dispose(); 
        NewRequest newRequest = new NewRequest(user);
        newRequest.setVisible(true);
    }//GEN-LAST:event_btNewRequestActionPerformed

    private void btFavouriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFavouriteActionPerformed
        // TODO add your handling code here:
        checkOffers(requestList, true);
    }//GEN-LAST:event_btFavouriteActionPerformed

    private void checkOffers(javax.swing.JList list, boolean selection) {                
        int index=list.getSelectedIndex();
        
        if(index>-1) {
            RequestCEN selected=(RequestCEN)list.getSelectedValue();
            offerList.removeAll();            
            
           if(selected!=null) {                
                DefaultListModel model = new DefaultListModel();                
                String offerString;                                
                Gson gson = new Gson();
                java.lang.reflect.Type collectionType = new TypeToken<ArrayList<RequestCEN>>(){}.getType();
                
                if(!selected.isFinished())
                    offerString = darOfertasByR(selected.getCode());
                else if(!selection)
                    offerString = darOfertasByRequestOk(selected.getCode());
                else
                    offerString = darOfertasSelection(selected.getCode());

                if(offerString.equals("null") || offerString.equals("")) {
                    model.addElement("No hay ofertas");
                    offerList.setEnabled(false);                    
                }
                else {
                    offers = gson.fromJson(offerString, collectionType);           

                    if(offers!=null && !offers.isEmpty())  {                
                        for(OfferCEN offer: offers) 
                            model.addElement(offer);                                                                        
                    }                                                            
                    offerList.setEnabled(true);                    
                }                                
                offerList.setModel(model);
                offerList.clearSelection();
            }
        }     
    }
    
    private void checkRequests() {
        requestList.removeAll();                
        requestFList.removeAll();                
                               
        DefaultListModel model = new DefaultListModel();
        DefaultListModel model2 = new DefaultListModel();
        
        String requestString = darPeticiones(user);
        String requestString2 = darPeticionesHis(user);
        
        Gson gson = new Gson();
        java.lang.reflect.Type collectionType = new TypeToken<ArrayList<RequestCEN>>(){}.getType();

        if(!requestString.equals("null") && !requestString.equals("")){
            requests = gson.fromJson(requestString, collectionType);                       
            ArrayList<RequestCEN> aux=gson.fromJson(requestString2, collectionType);
            
            if(aux!=null && !aux.isEmpty())
                requests.addAll(aux);
            
            if(requests!=null && !requests.isEmpty())  {                
                
                for(RequestCEN req: requests) {
                    if(req.isFinished())
                        model2.addElement(req);
                    else
                        model.addElement(req);
                }
                requestList.setModel(model);
                requestFList.setModel(model2);
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }*/
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAccept;
    private javax.swing.JButton btDecline;
    private javax.swing.JButton btFavourite;
    private javax.swing.JButton btNewRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbAccepted;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JPanel mainPane;
    private javax.swing.JList offerList;
    private javax.swing.JList requestFList;
    private javax.swing.JList requestList;
    // End of variables declaration//GEN-END:variables

    private static String darPeticiones(java.lang.String nif) {
        servicios.DarPeticionesNifP_Service service = new servicios.DarPeticionesNifP_Service();
        servicios.DarPeticionesNifP port = service.getDarPeticionesNifPPort();
        return port.darPeticiones(nif);
    }

    private static String darPeticionesHis(java.lang.String nif) {
        servicios.DarPeticionesNifF_Service service = new servicios.DarPeticionesNifF_Service();
        servicios.DarPeticionesNifF port = service.getDarPeticionesNifFPort();
        return port.darPeticionesHis(nif);
    }

    private static void borrar(int id) {
        servicios.BorrarPeticion_Service service = new servicios.BorrarPeticion_Service();
        servicios.BorrarPeticion port = service.getBorrarPeticionPort();
        port.borrar(id);
    }

    private static String darOfertasByR(int idR) {
        servicios.DarOfertasRequest_Service service = new servicios.DarOfertasRequest_Service();
        servicios.DarOfertasRequest port = service.getDarOfertasRequestPort();
        return port.darOfertasByR(idR);
    }

    private static String darOfertasByRequestOk(int idR) {
        servicios.DarOfertasRequestOk_Service service = new servicios.DarOfertasRequestOk_Service();
        servicios.DarOfertasRequestOk port = service.getDarOfertasRequestOkPort();
        return port.darOfertasByRequestOk(idR);
    }

    private static String darOfertasSelection(int idR) {
        servicios.DarOfertasSeleccionadas_Service service = new servicios.DarOfertasSeleccionadas_Service();
        servicios.DarOfertasSeleccionadas port = service.getDarOfertasSeleccionadasPort();
        return port.darOfertasSelection(idR);
    }
    
    
    
}
