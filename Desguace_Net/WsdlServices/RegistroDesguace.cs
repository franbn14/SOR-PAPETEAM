//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.17929
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.17929.
// 
namespace WsdlService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RegistroDesguacePortBinding", Namespace="http://Servicios/")]
    public partial class RegistroDesguace : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RegistroWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegistroOperationCompleted;
        
        /// <remarks/>
        public RegistroDesguace() {
            this.Url = "http://25.162.2.139:8080/Sor_Servicios/RegistroDesguace";
        }
        
        /// <remarks/>
        public event RegistroWebCompletedEventHandler RegistroWebCompleted;
        
        /// <remarks/>
        public event RegistroCompletedEventHandler RegistroCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RegistroWeb([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Cif, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Nombre, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Direccion, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Email) {
            object[] results = this.Invoke("RegistroWeb", new object[] {
                        Cif,
                        Nombre,
                        Password,
                        Direccion,
                        Email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegistroWeb(string Cif, string Nombre, string Password, string Direccion, string Email, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RegistroWeb", new object[] {
                        Cif,
                        Nombre,
                        Password,
                        Direccion,
                        Email}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRegistroWeb(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegistroWebAsync(string Cif, string Nombre, string Password, string Direccion, string Email) {
            this.RegistroWebAsync(Cif, Nombre, Password, Direccion, Email, null);
        }
        
        /// <remarks/>
        public void RegistroWebAsync(string Cif, string Nombre, string Password, string Direccion, string Email, object userState) {
            if ((this.RegistroWebOperationCompleted == null)) {
                this.RegistroWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistroWebOperationCompleted);
            }
            this.InvokeAsync("RegistroWeb", new object[] {
                        Cif,
                        Nombre,
                        Password,
                        Direccion,
                        Email}, this.RegistroWebOperationCompleted, userState);
        }
        
        private void OnRegistroWebOperationCompleted(object arg) {
            if ((this.RegistroWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistroWebCompleted(this, new RegistroWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Registro([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Cif, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Nombre, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Direccion, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Email) {
            object[] results = this.Invoke("Registro", new object[] {
                        id,
                        Cif,
                        Nombre,
                        Password,
                        Direccion,
                        Email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegistro(int id, string Cif, string Nombre, string Password, string Direccion, string Email, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Registro", new object[] {
                        id,
                        Cif,
                        Nombre,
                        Password,
                        Direccion,
                        Email}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRegistro(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegistroAsync(int id, string Cif, string Nombre, string Password, string Direccion, string Email) {
            this.RegistroAsync(id, Cif, Nombre, Password, Direccion, Email, null);
        }
        
        /// <remarks/>
        public void RegistroAsync(int id, string Cif, string Nombre, string Password, string Direccion, string Email, object userState) {
            if ((this.RegistroOperationCompleted == null)) {
                this.RegistroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistroOperationCompleted);
            }
            this.InvokeAsync("Registro", new object[] {
                        id,
                        Cif,
                        Nombre,
                        Password,
                        Direccion,
                        Email}, this.RegistroOperationCompleted, userState);
        }
        
        private void OnRegistroOperationCompleted(object arg) {
            if ((this.RegistroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistroCompleted(this, new RegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void RegistroWebCompletedEventHandler(object sender, RegistroWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegistroWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegistroWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void RegistroCompletedEventHandler(object sender, RegistroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegistroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegistroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
