//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.17929
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.17929.
// 
namespace WsdlService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PassManagerPortBinding", Namespace="http://Servicios/")]
    public partial class PassManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback changePassOperationCompleted;
        
        private System.Threading.SendOrPostCallback forgetPassOperationCompleted;
        
        /// <remarks/>
        public PassManager() {
            this.Url = "http://25.162.2.139:8080/Sor_Servicios/PassManager";
        }
        
        /// <remarks/>
        public event changePassCompletedEventHandler changePassCompleted;
        
        /// <remarks/>
        public event forgetPassCompletedEventHandler forgetPassCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string changePass([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string token, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string doc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pass) {
            object[] results = this.Invoke("changePass", new object[] {
                        token,
                        doc,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginchangePass(string token, string doc, string pass, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("changePass", new object[] {
                        token,
                        doc,
                        pass}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndchangePass(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void changePassAsync(string token, string doc, string pass) {
            this.changePassAsync(token, doc, pass, null);
        }
        
        /// <remarks/>
        public void changePassAsync(string token, string doc, string pass, object userState) {
            if ((this.changePassOperationCompleted == null)) {
                this.changePassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePassOperationCompleted);
            }
            this.InvokeAsync("changePass", new object[] {
                        token,
                        doc,
                        pass}, this.changePassOperationCompleted, userState);
        }
        
        private void OnchangePassOperationCompleted(object arg) {
            if ((this.changePassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePassCompleted(this, new changePassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forgetPass([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string doc) {
            object[] results = this.Invoke("forgetPass", new object[] {
                        doc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginforgetPass(string doc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("forgetPass", new object[] {
                        doc}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndforgetPass(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void forgetPassAsync(string doc) {
            this.forgetPassAsync(doc, null);
        }
        
        /// <remarks/>
        public void forgetPassAsync(string doc, object userState) {
            if ((this.forgetPassOperationCompleted == null)) {
                this.forgetPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforgetPassOperationCompleted);
            }
            this.InvokeAsync("forgetPass", new object[] {
                        doc}, this.forgetPassOperationCompleted, userState);
        }
        
        private void OnforgetPassOperationCompleted(object arg) {
            if ((this.forgetPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forgetPassCompleted(this, new forgetPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void changePassCompletedEventHandler(object sender, changePassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void forgetPassCompletedEventHandler(object sender, forgetPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forgetPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forgetPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
